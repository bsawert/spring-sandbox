<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- enable autowiring of components -->
    <context:component-scan base-package="com.sawert.sandbox.spring.mvc" />

    <!-- enable the Spring MVC @Controller programming model -->
    <!-- configure content negotiation and default message converters -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />

    <!-- configure static resources that can be cached -->
    <mvc:resources location="/resources/" mapping="/resources/**" />

   	<!-- content negotiation for controllers that return @ResponseBody -->
   	<!-- path extension, then parameter, then Accept header -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="favorPathExtension" value="true" />
		<property name="ignoreAcceptHeader" value="true"/>
	    <property name="useJaf" value="false"/>
	    <property name="defaultContentType" value="application/json" />
	    <property name="mediaTypes">
	        <map>
	            <entry key="json" value="application/json" />
	            <entry key="xml" value="application/xml" />
	       </map>
	    </property>
    </bean>

    <!-- view resolvers -->
    <!-- view resolvers for controllers that return ModelAndView instead of @ResponseBody -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
        p:prefix="/WEB-INF/views/" p:suffix=".jsp">
    </bean>
 <!--
    <bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>com.sawert.sandbox.spring.mvc.model.TestModel</value>
                <value>com.sawert.sandbox.spring.mvc.model.TestModels</value>
            </list>
        </property>
    </bean>
-->
    <!-- message source -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource"
        p:basename="properties/messages">
    </bean>

    <!-- handler interceptors -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/models"/>
            <mvc:mapping path="/model/*"/>
            <bean class="com.sawert.sandbox.spring.mvc.interceptor.TestHandlerInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- default exception handler -->
    <!--
    <bean id="defaultExceptionHandlerTemplate"
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" abstract="true">
        <property name="defaultErrorView" value="defError" />
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.bind.MissingServletRequestParameterException">debug</prop>
            </props>
        </property>
    </bean>

    <bean id="defaultExceptionHandler" parent="defaultExceptionHandlerTemplate" />
    -->
</beans>